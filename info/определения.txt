
Django REST Framework (DRF) - это расширение фреймворка Django, специализированое на зоздании REST API
    Устанавливается как отдельная библиотекаи интегрируется с Django

DRF представляет инструменты для сериализации и десериализации данных

Serializer — компонент Django REST framework, который преобразует модели Django в форматы, которые могут быть отправлены по сети.
    Serializer позволяет сериализовать (преобразовать в формат, понятный для других приложений) данные, которые могут быть сохранены или отправлены по сети.

Вместе с DRF есть встроенный аутентификатор с настройками

DRF позволяет автоматически генерировать документацию

---- ---- ----

Django – фреймворк для веб-разработки на Python.
    Он предоставляет разработчикам инструменты для создания высокоуровневых веб-приложений быстро и эффективно.
    В основе Django лежит паттерн проектирования Model-View-Controller (MVC),
    где модели (Model) представляют данные,
    представления (View) отображают данные пользователю,
    а контроллеры (Controller) обрабатывают запросы и обновляют данные.


ORM Django позволяет взаимодействовать с базами данных, используя объектно-ориентированный подход.
    Django ORM позволяет создавать, читать, обновлять и удалять данные из базы данных, не используя SQL-запросы.
    Он также обеспечивает автоматическую генерацию SQL-запросов для создания и обновления таблиц в базе данных.


Шаблонизатор Django позволяет создавать динамические HTML-страницы, используя шаблоны и контекстные данные.

Шаблоны Django – файлы, содержащие HTML-код и специальные теги, которые позволяют вставлять данные из контекста в HTML-код.
    Шаблонизатор Django позволяет создавать наследуемые шаблоны, которые могут использоваться в разных частях приложения.


Роутинг в Django — процесс определения, какой обработчик должен быть вызван для конкретного URL-адреса.

В Django веб-сервером является сервер WSGI (Web Server Gateway Interface), который обеспечивает связь между сервером и веб-приложением.
    WSGI является стандартом Python и обеспечивает множество возможностей для создания веб-приложений на Python.


Статические файлы в Django — файлы, которые используются в веб-приложении, но не изменяются в зависимости от запроса пользователя.

Permissions — механизм, который позволяет контролировать доступ к определенным ресурсам в приложении.
    Django REST framework предоставляет несколько способов управления доступом, таких как IsAuthenticated, IsAdminUser и др.







